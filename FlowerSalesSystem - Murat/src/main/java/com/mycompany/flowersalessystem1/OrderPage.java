/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.flowersalessystem1;

import Classes.Order;
import Classes.OrderItem;
import Databases.FlowerDatabaseManager;
import Databases.OrderDatabaseManager;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author murat
 */
public class OrderPage extends javax.swing.JFrame {

    /**
     * Creates new form Orders
     */
    DefaultTableModel t = new DefaultTableModel();
    private final JPanel patternPanel;

    public OrderPage() {
        initComponents();
        patternPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Image patternImage = new ImageIcon("C:\\Users\\murat\\Desktop\\1-1Z3041506352H.jpg").getImage();
                g.drawImage(patternImage, 0, 0, getWidth(), getHeight(), null);
            }
        };
        patternPanel.setLayout(null);
        patternPanel.setBounds(0, 0, getWidth(), getHeight());
        getContentPane().add(patternPanel);

        addComponentListener(new java.awt.event.ComponentAdapter() {
            @Override
            public void componentResized(java.awt.event.ComponentEvent evt) {
                patternPanel.setBounds(0, 0, getWidth(), getHeight());
            }
        });
        t.addColumn("Order id");
        t.addColumn("user id");
        t.addColumn("delivery address");
        tblOrder.setModel(t);
        updateTable();

    }

    public void updateTable() {

        t.setRowCount(0);

        ArrayList<Order> orders = OrderDatabaseManager.getOrders();

        for (Order order : orders) {
            Object[] rowData = {order.getOrderId(), order.getUserId(), order.getDeliveryAddress()};
            t.addRow(rowData);

        }
    }

    public void findOrdersByEmail(String email) {

        t.setRowCount(0);

        ArrayList<Order> orders = OrderDatabaseManager.getOrdersByEmail(email);

        for (Order order : orders) {
            Object[] rowData = {order.getOrderId(), order.getUserId(), order.getDeliveryAddress()};
            t.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        btnODetails = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtMail = new javax.swing.JTextField();
        btnFindOrder = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("                  Orders");

        btnBack.setBackground(new java.awt.Color(204, 204, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnBack.setText("Back to Main");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblOrder.setBackground(new java.awt.Color(204, 204, 255));
        tblOrder.setModel(t);
        jScrollPane2.setViewportView(tblOrder);

        btnODetails.setBackground(new java.awt.Color(204, 204, 255));
        btnODetails.setText("Order Details");
        btnODetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnODetailsActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 204, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFindOrder.setBackground(new java.awt.Color(204, 204, 255));
        btnFindOrder.setText("Customer's Orders");
        btnFindOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindOrderActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(204, 204, 255));
        btnRefresh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnODetails, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMail)
                            .addComponent(btnFindOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnRefresh))
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnODetails, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFindOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        AdminPage a = new AdminPage();
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnODetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnODetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an order to see details.");
            return;
        }

        int orderId = (int) tblOrder.getValueAt(selectedRow, 0);

        Order order = OrderDatabaseManager.getOrderById(orderId);
        List<OrderItem> orderItems = OrderDatabaseManager.getOrderItemsByOrderId(order.getOrderId());

        if (orderItems.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No items found for this order.");
            return;
        }

        StringBuilder orderDetails = new StringBuilder();
        orderDetails.append("Order Details:\n");
        orderDetails.append("Order Id: ").append(order.getOrderId()).append("\n");
        orderDetails.append("User Id: ").append(order.getUserId()).append("\n");
        orderDetails.append("Address: ").append(order.getDeliveryAddress()).append("\n");
        orderDetails.append("Flowers:\n");

        double totalPrice = 0.0;
        for (OrderItem item : orderItems) {
            double itemTotal = item.getQuantity() * item.getPrice();
            orderDetails.append("- Flower: ").append(item.getFlowerName()).append(", Quantity: ").append(item.getQuantity()).append(", Total price: ").append(itemTotal).append("\n");
            totalPrice += itemTotal;
        }
        try {
            // Dosyayı masaüstünden okuyun
            String desktopPath = System.getProperty("user.home") + "/Desktop/";
            File file = new File(desktopPath + "credit_card_details.txt");
            Scanner scanner = new Scanner(file);

            String cardInfoForOrder = null;
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line.contains("Order ID: " + order.getOrderId())) {
                    cardInfoForOrder = line;
                    break;
                }
            }
            scanner.close();

            if (cardInfoForOrder != null) {
                orderDetails.append("Credit Card Details: ").append(cardInfoForOrder).append("\n");
            } else {
                orderDetails.append("Credit Card Details: Not found\n");
            }

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Error reading credit card details file.");
        }

        orderDetails.append("Total price: ").append(totalPrice);

        JOptionPane.showMessageDialog(this, orderDetails.toString());

    }//GEN-LAST:event_btnODetailsActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblOrder.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an order to delete.");
            return;
        }

        // Get the order ID from the selected row.
        int orderId = (int) tblOrder.getValueAt(selectedRow, 0);

        // Fetch the order items for the selected order.
        List<OrderItem> orderItems = OrderDatabaseManager.getOrderItemsByOrderId(orderId);

        // Add the flowers back to the stock.
        for (OrderItem item : orderItems) {
            FlowerDatabaseManager.updateFlowerStockbyName(item.getFlowerName(), item.getQuantity());
        }

        // Delete the order from the database.
        OrderDatabaseManager.deleteOrderById(orderId);

        // Update the JTable.
        updateTable();

        JOptionPane.showMessageDialog(this, "Order deleted and stock updated.");


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFindOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindOrderActionPerformed
        // TODO add your handling code here:
        String email = txtMail.getText();
        findOrdersByEmail(email);

    }//GEN-LAST:event_btnFindOrderActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        updateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindOrder;
    private javax.swing.JButton btnODetails;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField txtMail;
    // End of variables declaration//GEN-END:variables

}
