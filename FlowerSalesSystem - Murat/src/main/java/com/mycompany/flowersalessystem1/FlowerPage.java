/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.flowersalessystem1;

import Classes.Flower;
import Databases.FlowerDatabaseManager;
import java.awt.Graphics;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author murat
 */
public class FlowerPage extends javax.swing.JFrame {

    /**
     * Creates new form Flowers
     */
    DefaultTableModel t = new DefaultTableModel();
    private final JPanel patternPanel;

    public FlowerPage() {
        initComponents();
        patternPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Image patternImage = new ImageIcon("C:\\Users\\murat\\Desktop\\1-1Z3041506352H.jpg").getImage(); // Desenin yolunu belirtin
                g.drawImage(patternImage, 0, 0, getWidth(), getHeight(), null);
            }
        };
        patternPanel.setLayout(null);
        patternPanel.setBounds(0, 0, getWidth(), getHeight());
        getContentPane().add(patternPanel);

        addComponentListener(new java.awt.event.ComponentAdapter() {
            @Override
            public void componentResized(java.awt.event.ComponentEvent evt) {
                patternPanel.setBounds(0, 0, getWidth(), getHeight());
            }
        });
        t.addColumn("id");
        t.addColumn("name");
        t.addColumn("price");
        t.addColumn("stock");
        fillTable();
    }

    public void fillTable() {
        // Clear the table
        t.setRowCount(0);

        // Fetch the flower data from the database.
        ArrayList<Flower> flowers = FlowerDatabaseManager.getFlowers();

        // Add a row to the table model for each flower.
        for (Flower flower : flowers) {
            t.addRow(new Object[]{flower.getId(), flower.getName(), flower.getPrice(), flower.getStock()});
        }

        // Apply the table model to the table.
        tblFlowers.setModel(t);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFlowers = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnMain = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        txtStock = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnIncreaseStock = new javax.swing.JButton();
        btnDeleteFlower = new javax.swing.JButton();
        btnDecreaseStock = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblFlowers.setBackground(new java.awt.Color(204, 204, 255));
        tblFlowers.setModel(t);
        jScrollPane2.setViewportView(tblFlowers);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("                         Flowers");

        jLabel3.setText("Price");

        btnMain.setBackground(new java.awt.Color(204, 204, 255));
        btnMain.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnMain.setText("Back to Main");
        btnMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainActionPerformed(evt);
            }
        });

        jLabel4.setText("Name");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(204, 204, 255));
        btnAdd.setText("Add New Flower");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txtStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStockActionPerformed(evt);
            }
        });

        jLabel5.setText("Stock");

        btnIncreaseStock.setBackground(new java.awt.Color(204, 204, 255));
        btnIncreaseStock.setText("Increase");
        btnIncreaseStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncreaseStockActionPerformed(evt);
            }
        });

        btnDeleteFlower.setBackground(new java.awt.Color(204, 204, 255));
        btnDeleteFlower.setText("Delete Flower");
        btnDeleteFlower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFlowerActionPerformed(evt);
            }
        });

        btnDecreaseStock.setBackground(new java.awt.Color(204, 204, 255));
        btnDecreaseStock.setText("Decrease");
        btnDecreaseStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecreaseStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteFlower)
                                .addGap(44, 44, 44)
                                .addComponent(btnIncreaseStock, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(btnDecreaseStock, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnMain, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMain, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDeleteFlower, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIncreaseStock, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDecreaseStock, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainActionPerformed
        // TODO add your handling code here:
        AdminPage a = new AdminPage();
        dispose();
        a.setVisible(true);
    }//GEN-LAST:event_btnMainActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String priceString = txtPrice.getText();
        String stockString = txtStock.getText();

        double price = Double.parseDouble(priceString);
        int stock = Integer.parseInt(stockString);

        Flower f = new Flower(name, price, stock);
        if (FlowerDatabaseManager.createFlower(f)) {
            JOptionPane.showMessageDialog(rootPane, "Succesfull");
        }

        fillTable();


    }//GEN-LAST:event_btnAddActionPerformed

    private void txtStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockActionPerformed

    private void btnIncreaseStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncreaseStockActionPerformed
        // TODO add your handling code here:
          int selectedRow = tblFlowers.getSelectedRow();

    // If no row is selected, show a message and return
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a flower to update stock.");
        return;
    }

    // Get the flower's ID from the selected row (assuming the ID is in the first column)
    int flowerId = Integer.parseInt(tblFlowers.getValueAt(selectedRow, 0).toString());

    // Get the stock increment value from the txtStock text field
    String stockIncrementString = txtStock.getText();
    int stockIncrement;
    try {
        stockIncrement = Integer.parseInt(stockIncrementString);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid number for stock increment.");
        return;
    }

    // Increase the stock of the flower in the database
    if (FlowerDatabaseManager.increaseFlowerStock(flowerId, stockIncrement)) {
        JOptionPane.showMessageDialog(this, "Flower stock updated successfully.");
    } else {
        JOptionPane.showMessageDialog(this, "Error updating flower stock.");
    }

    // Refresh the table
    fillTable();
        
    }//GEN-LAST:event_btnIncreaseStockActionPerformed

    private void btnDeleteFlowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFlowerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFlowers.getSelectedRow();

        // If no row is selected, show a message and return
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a flower to delete.");
            return;
        }

        // Get the flower's ID from the selected row (assuming the ID is in the first column)
        int flowerId = Integer.parseInt(tblFlowers.getValueAt(selectedRow, 0).toString());

        // Delete the flower from the database using its ID
        if (FlowerDatabaseManager.deleteFlower(flowerId)) {
            JOptionPane.showMessageDialog(this, "Flower deleted successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Error deleting flower.");
        }

        // Refresh the table
        fillTable();

    }//GEN-LAST:event_btnDeleteFlowerActionPerformed

    private void btnDecreaseStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecreaseStockActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFlowers.getSelectedRow();

    // If no row is selected, show a message and return
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a flower to update stock.");
        return;
    }

    // Get the flower's ID from the selected row (assuming the ID is in the first column)
    int flowerId = Integer.parseInt(tblFlowers.getValueAt(selectedRow, 0).toString());

    // Get the stock decrement value from the txtStock text field
    String stockDecrementString = txtStock.getText();
    int stockDecrement;
    try {
        stockDecrement = Integer.parseInt(stockDecrementString);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid number for stock decrement.");
        return;
    }

    // Decrease the stock of the flower in the database
    if (FlowerDatabaseManager.decreaseFlowerStock(flowerId, stockDecrement)) {
        JOptionPane.showMessageDialog(this, "Flower stock updated successfully.");
    } else {
        JOptionPane.showMessageDialog(this, "Error updating flower stock.");
    }

    // Refresh the table
    fillTable();
    }//GEN-LAST:event_btnDecreaseStockActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDecreaseStock;
    private javax.swing.JButton btnDeleteFlower;
    private javax.swing.JButton btnIncreaseStock;
    private javax.swing.JButton btnMain;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblFlowers;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
